import BaseSetting from"../../../common/documents/setting.mjs";import ServerDocumentMixin from"../backend/server-document.mjs";import{USER_PERMISSIONS,USER_ROLES}from"../../../common/constants.mjs";export default class Setting extends(ServerDocumentMixin(BaseSetting)){async _onCreate(e,t,i){return this.#e()}async _onUpdate(e,t,i){return this.#e()}async#e(){switch(this.key){case"core.permissions":return game.permissions=this.value;case"core.compendiumConfiguration":return game.compendiumConfiguration=this.value;case"core.moduleConfiguration":return game.world.updateActivePacks();case"core.time":return game.activity.worldTime=parseInt(this.value)}}static async getValue(e){let t=await this.db.findOne({key:e});return null===t?null:JSON.parse(t.value)}static async set(e,t){t="string"==typeof t?t:JSON.stringify(t);let i=await this.find({key:e});if(i.length){i=i.shift();const e=await i.update({value:t});i.updateSource(e)}else i=await this.create({key:e,value:t});return i}static async getPermissions(){let e=await this.getValue("core.permissions")||{},t=!1;for(let[i,s]of Object.entries(USER_PERMISSIONS))i in e||(e[i]=Object.values(USER_ROLES).reduce(((e,t)=>(s.defaultRole<=t&&e.push(t),e)),[]),t=!0);return t&&await this.set("core.permissions",e),game.permissions=e}static async advanceTime(e,{user:t}={}){const i=await this.getValue("core.time")??0,s=await this.set("core.time",i+e);return global.express.io.emit("modifyDocument",{request:{type:"Setting",action:"update",options:{render:!1}},result:[{_id:s.id,value:s.value}],userId:t?.id}),s}}